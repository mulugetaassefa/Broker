{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react\\\\project\\\\client\\\\src\\\\contexts\\\\SocketContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useRef, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n  var _socketRef$current3;\n  const {\n    user,\n    token\n  } = useAuth();\n  const socketRef = useRef(null);\n  const reconnectAttempts = useRef(0);\n  const maxReconnectAttempts = 5;\n  const reconnectDelay = 1000; // 1 second\n\n  const connectSocket = useCallback(() => {\n    if (!user || !token) return;\n\n    // Close existing connection if any\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n      socketRef.current = null;\n    }\n\n    // Initialize new socket connection\n    socketRef.current = io(process.env.REACT_APP_API_URL, {\n      withCredentials: true,\n      auth: {\n        token\n      },\n      reconnection: true,\n      reconnectionAttempts: maxReconnectAttempts,\n      reconnectionDelay,\n      reconnectionDelayMax: 5000,\n      timeout: 20000,\n      transports: ['websocket', 'polling']\n    });\n\n    // Connection events\n    socketRef.current.on('connect', () => {\n      console.log('WebSocket connected');\n      reconnectAttempts.current = 0; // Reset reconnect attempts on successful connection\n    });\n    socketRef.current.on('connect_error', err => {\n      console.error('WebSocket connection error:', err.message);\n      if (reconnectAttempts.current < maxReconnectAttempts) {\n        const delay = reconnectDelay * Math.pow(2, reconnectAttempts.current);\n        console.log(`Reconnection attempt ${reconnectAttempts.current + 1} in ${delay}ms`);\n        reconnectAttempts.current++;\n      }\n    });\n    socketRef.current.on('disconnect', reason => {\n      console.log('WebSocket disconnected. Reason:', reason);\n    });\n\n    // Error handling\n    socketRef.current.on('error', error => {\n      console.error('WebSocket error:', error);\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n    };\n  }, [user, token]);\n\n  // Connect on mount and when user/token changes\n  useEffect(() => {\n    connectSocket();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        socketRef.current = null;\n      }\n    };\n  }, [connectSocket]);\n  const joinConversation = useCallback(conversationId => {\n    var _socketRef$current;\n    if ((_socketRef$current = socketRef.current) !== null && _socketRef$current !== void 0 && _socketRef$current.connected) {\n      socketRef.current.emit('join_conversation', conversationId);\n    } else {\n      console.warn('Cannot join conversation: WebSocket not connected');\n    }\n  }, []);\n  const leaveConversation = useCallback(conversationId => {\n    var _socketRef$current2;\n    if ((_socketRef$current2 = socketRef.current) !== null && _socketRef$current2 !== void 0 && _socketRef$current2.connected) {\n      socketRef.current.emit('leave_conversation', conversationId);\n    }\n  }, []);\n  const value = {\n    socket: socketRef.current,\n    isConnected: ((_socketRef$current3 = socketRef.current) === null || _socketRef$current3 === void 0 ? void 0 : _socketRef$current3.connected) || false,\n    joinConversation,\n    leaveConversation\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(SocketProvider, \"AxXaclgDzbwiYJM6UEEg9Kl5KiI=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nexport const useSocket = () => {\n  _s2();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s2(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useRef","useCallback","io","useAuth","jsxDEV","_jsxDEV","SocketContext","SocketProvider","children","_s","_socketRef$current3","user","token","socketRef","reconnectAttempts","maxReconnectAttempts","reconnectDelay","connectSocket","current","disconnect","process","env","REACT_APP_API_URL","withCredentials","auth","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","timeout","transports","on","console","log","err","error","message","delay","Math","pow","reason","joinConversation","conversationId","_socketRef$current","connected","emit","warn","leaveConversation","_socketRef$current2","value","socket","isConnected","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSocket","_s2","context","Error","$RefreshReg$"],"sources":["D:/project/react/project/client/src/contexts/SocketContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useRef, useCallback } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const { user, token } = useAuth();\r\n  const socketRef = useRef(null);\r\n  const reconnectAttempts = useRef(0);\r\n  const maxReconnectAttempts = 5;\r\n  const reconnectDelay = 1000; // 1 second\r\n\r\n  const connectSocket = useCallback(() => {\r\n    if (!user || !token) return;\r\n\r\n    // Close existing connection if any\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n      socketRef.current = null;\r\n    }\r\n\r\n    // Initialize new socket connection\r\n    socketRef.current = io(process.env.REACT_APP_API_URL, {\r\n      withCredentials: true,\r\n      auth: { token },\r\n      reconnection: true,\r\n      reconnectionAttempts: maxReconnectAttempts,\r\n      reconnectionDelay,\r\n      reconnectionDelayMax: 5000,\r\n      timeout: 20000,\r\n      transports: ['websocket', 'polling']\r\n    });\r\n\r\n    // Connection events\r\n    socketRef.current.on('connect', () => {\r\n      console.log('WebSocket connected');\r\n      reconnectAttempts.current = 0; // Reset reconnect attempts on successful connection\r\n    });\r\n\r\n    socketRef.current.on('connect_error', (err) => {\r\n      console.error('WebSocket connection error:', err.message);\r\n      if (reconnectAttempts.current < maxReconnectAttempts) {\r\n        const delay = reconnectDelay * Math.pow(2, reconnectAttempts.current);\r\n        console.log(`Reconnection attempt ${reconnectAttempts.current + 1} in ${delay}ms`);\r\n        reconnectAttempts.current++;\r\n      }\r\n    });\r\n\r\n    socketRef.current.on('disconnect', (reason) => {\r\n      console.log('WebSocket disconnected. Reason:', reason);\r\n    });\r\n\r\n    // Error handling\r\n    socketRef.current.on('error', (error) => {\r\n      console.error('WebSocket error:', error);\r\n    });\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n        socketRef.current = null;\r\n      }\r\n    };\r\n  }, [user, token]);\r\n\r\n  // Connect on mount and when user/token changes\r\n  useEffect(() => {\r\n    connectSocket();\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n        socketRef.current = null;\r\n      }\r\n    };\r\n  }, [connectSocket]);\r\n\r\n  const joinConversation = useCallback((conversationId) => {\r\n    if (socketRef.current?.connected) {\r\n      socketRef.current.emit('join_conversation', conversationId);\r\n    } else {\r\n      console.warn('Cannot join conversation: WebSocket not connected');\r\n    }\r\n  }, []);\r\n\r\n  const leaveConversation = useCallback((conversationId) => {\r\n    if (socketRef.current?.connected) {\r\n      socketRef.current.emit('leave_conversation', conversationId);\r\n    }\r\n  }, []);\r\n\r\n  const value = {\r\n    socket: socketRef.current,\r\n    isConnected: socketRef.current?.connected || false,\r\n    joinConversation,\r\n    leaveConversation,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}