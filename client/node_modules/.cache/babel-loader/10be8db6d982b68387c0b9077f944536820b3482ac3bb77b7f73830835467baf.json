{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react\\\\project\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport api, { apiInstance } from '../services/api';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          var _response$data;\n          // Set the auth token\n          apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Fetch user data\n          const response = await api.auth.me();\n          const userData = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.user) || response.data;\n\n          // Ensure user object has _id field\n          if (userData) {\n            const normalizedUser = {\n              ...userData,\n              _id: userData._id || userData.id // Handle both _id and id fields\n            };\n            setUser(normalizedUser);\n          }\n        }\n      } catch (err) {\n        console.error('Auth check failed:', err);\n        localStorage.removeItem('token');\n        delete apiInstance.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      var _location$state, _location$state$from;\n      setError(null);\n      console.log('Attempting login with:', {\n        email\n      });\n      const response = await api.auth.login({\n        email,\n        password\n      });\n      console.log('Login response:', response);\n\n      // Handle the server's response format\n      const {\n        token,\n        user,\n        message\n      } = response;\n      console.log('Extracted token and user:', {\n        token,\n        user\n      });\n      if (!token || !user) {\n        console.error('Missing token or user in response:', response);\n        throw new Error(message || 'Invalid response from server');\n      }\n      localStorage.setItem('token', token);\n      apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n\n      // Redirect to the intended page or dashboard based on user role\n      const to = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || (user.role === 'admin' ? '/dashboard/admin' : '/dashboard');\n      navigate(to, {\n        replace: true\n      });\n      toast.success(message || 'Logged in successfully!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('Login error:', err);\n      let errorMessage = 'Login failed. Please try again.';\n      if (err.response) {\n        var _err$response$data, _err$response$data2, _err$response$data2$e, _err$response$data3;\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        errorMessage = ((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || ((_err$response$data2 = err.response.data) === null || _err$response$data2 === void 0 ? void 0 : (_err$response$data2$e = _err$response$data2.error) === null || _err$response$data2$e === void 0 ? void 0 : _err$response$data2$e.message) || ((_err$response$data3 = err.response.data) === null || _err$response$data3 === void 0 ? void 0 : _err$response$data3.error) || `Server error: ${err.response.status}`;\n      } else if (err.request) {\n        // The request was made but no response was received\n        errorMessage = 'No response from server. Please check your connection.';\n      } else if (err.message) {\n        // Something happened in setting up the request\n        errorMessage = err.message;\n      }\n      console.error('Login failed:', errorMessage);\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete apiInstance.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully!');\n    navigate('/login');\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await api.auth.register(userData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (err) {\n      var _err$response, _err$response$data4;\n      const error = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data4 = _err$response.data) === null || _err$response$data4 === void 0 ? void 0 : _err$response$data4.message) || 'Registration failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Update profile\n  const updateProfile = async userData => {\n    try {\n      const response = await api.auth.updateProfile(userData);\n      setUser(response.data);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true,\n        user: response.data\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const error = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Update failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.auth.changePassword({\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      const error = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Password change failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Forgot password\n  const forgotPassword = async email => {\n    try {\n      await api.auth.forgotPassword(email);\n      toast.success('Password reset link sent to your email');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      const error = ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Password reset request failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (token, password) => {\n    try {\n      await api.auth.resetPassword(token, {\n        password\n      });\n      toast.success('Password reset successful. Please login with your new password.');\n      navigate('/login');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      const error = ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Password reset failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Check if user is admin\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  const value = {\n    user,\n    loading,\n    error,\n    isAdmin,\n    login,\n    logout,\n    register,\n    updateProfile,\n    changePassword,\n    forgotPassword,\n    resetPassword,\n    setError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"Ir0O4uDvM0NuI5XjcKWqs1T5vIg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","useLocation","api","apiInstance","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","navigate","location","checkAuth","token","localStorage","getItem","_response$data","defaults","headers","common","response","auth","me","userData","data","normalizedUser","_id","id","err","console","removeItem","login","email","password","_location$state","_location$state$from","log","message","Error","setItem","to","state","from","pathname","role","replace","success","errorMessage","_err$response$data","_err$response$data2","_err$response$data2$e","_err$response$data3","status","request","logout","register","_err$response","_err$response$data4","updateProfile","_err$response2","_err$response2$data","changePassword","currentPassword","newPassword","_err$response3","_err$response3$data","forgotPassword","_err$response4","_err$response4$data","resetPassword","_err$response5","_err$response5$data","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/project/react/project/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport api, { apiInstance } from '../services/api';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Check if user is logged in on initial load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          // Set the auth token\r\n          apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // Fetch user data\r\n          const response = await api.auth.me();\r\n          const userData = response.data?.user || response.data;\r\n          \r\n          // Ensure user object has _id field\r\n          if (userData) {\r\n            const normalizedUser = {\r\n              ...userData,\r\n              _id: userData._id || userData.id // Handle both _id and id fields\r\n            };\r\n            setUser(normalizedUser);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Auth check failed:', err);\r\n        localStorage.removeItem('token');\r\n        delete apiInstance.defaults.headers.common['Authorization'];\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      console.log('Attempting login with:', { email });\r\n      const response = await api.auth.login({ email, password });\r\n      console.log('Login response:', response);\r\n      \r\n      // Handle the server's response format\r\n      const { token, user, message } = response;\r\n      \r\n      console.log('Extracted token and user:', { token, user });\r\n      \r\n      if (!token || !user) {\r\n        console.error('Missing token or user in response:', response);\r\n        throw new Error(message || 'Invalid response from server');\r\n      }\r\n      \r\n      localStorage.setItem('token', token);\r\n      apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(user);\r\n      \r\n      // Redirect to the intended page or dashboard based on user role\r\n      const to = location.state?.from?.pathname || \r\n                (user.role === 'admin' ? '/dashboard/admin' : '/dashboard');\r\n      navigate(to, { replace: true });\r\n      \r\n      toast.success(message || 'Logged in successfully!');\r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Login error:', err);\r\n      let errorMessage = 'Login failed. Please try again.';\r\n      \r\n      if (err.response) {\r\n        // The request was made and the server responded with a status code\r\n        // that falls out of the range of 2xx\r\n        errorMessage = err.response.data?.message || \r\n                      err.response.data?.error?.message ||\r\n                      err.response.data?.error ||\r\n                      `Server error: ${err.response.status}`;\r\n      } else if (err.request) {\r\n        // The request was made but no response was received\r\n        errorMessage = 'No response from server. Please check your connection.';\r\n      } else if (err.message) {\r\n        // Something happened in setting up the request\r\n        errorMessage = err.message;\r\n      }\r\n      \r\n      console.error('Login failed:', errorMessage);\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete apiInstance.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    toast.success('Logged out successfully!');\r\n    navigate('/login');\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.auth.register(userData);\r\n      return { success: true, data: response.data };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Registration failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Update profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const response = await api.auth.updateProfile(userData);\r\n      setUser(response.data);\r\n      toast.success('Profile updated successfully!');\r\n      return { success: true, user: response.data };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Update failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await api.auth.changePassword({ currentPassword, newPassword });\r\n      toast.success('Password changed successfully!');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Password change failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Forgot password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await api.auth.forgotPassword(email);\r\n      toast.success('Password reset link sent to your email');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Password reset request failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      await api.auth.resetPassword(token, { password });\r\n      toast.success('Password reset successful. Please login with your new password.');\r\n      navigate('/login');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Password reset failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = user?.role === 'admin';\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    isAdmin,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n    changePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    setError\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}