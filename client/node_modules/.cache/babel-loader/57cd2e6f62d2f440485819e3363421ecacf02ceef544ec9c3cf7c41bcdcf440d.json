{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\n// Create axios instance with base URL\nconst apiInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  // Admin analytics\n  admin: {\n    getDashboard: async () => {\n      const response = await apiInstance.get('/api/admin/dashboard', {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    },\n    getStatistics: async (params = {}) => {\n      const response = await apiInstance.get('/api/admin/statistics', {\n        params,\n        headers: getAuthHeader()\n      });\n      return response.data;\n    }\n  },\n  timeout: 10000,\n  // 10 seconds\n  withCredentials: true // Important for CORS with credentials\n});\n\n// Request interceptor to add auth token\napiInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  // Ensure Content-Type is set correctly for FormData\n  if (config.data instanceof FormData) {\n    config.headers['Content-Type'] = 'multipart/form-data';\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napiInstance.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$config, _error$config2, _error$config3, _error$response3;\n  console.error('API Error:', {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    config: {\n      url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n      method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n      data: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.data\n    }\n  });\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    // Handle unauthorized access (e.g., redirect to login)\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Upload images\nconst uploadImages = async formData => {\n  try {\n    const response = await apiInstance.post('/api/upload/images', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response5;\n    console.error('Upload images API error:', {\n      message: error.message,\n      status: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status,\n      data: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data,\n      config: error.config\n    });\n    throw error;\n  }\n};\n\n// Delete image\nconst deleteImage = async publicId => {\n  try {\n    const response = await apiInstance.delete(`/api/upload/images/${publicId}`);\n    return response.data;\n  } catch (error) {\n    var _error$response6, _error$response7;\n    console.error('Delete image API error:', {\n      message: error.message,\n      status: (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status,\n      data: (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data\n    });\n    throw error;\n  }\n};\n\n// Get auth header\nconst getAuthHeader = () => {\n  const token = localStorage.getItem('token');\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n};\n\n// API methods\nconst api = {\n  // Auth\n  auth: {\n    login: async credentials => {\n      try {\n        console.log('Login attempt with:', {\n          identifier: credentials.identifier\n        });\n        const response = await apiInstance.post('/api/auth/login', {\n          identifier: credentials.identifier,\n          password: credentials.password\n        });\n        console.log('Login response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response8, _error$response9;\n        console.error('Login API error:', {\n          message: error.message,\n          status: (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status,\n          data: (_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data\n        });\n        throw error;\n      }\n    },\n    register: async userData => {\n      try {\n        console.log('Registration attempt for:', userData.email);\n        const response = await apiInstance.post('/api/auth/register', userData);\n        console.log('Registration response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response0, _error$response1;\n        console.error('Registration API error:', {\n          message: error.message,\n          status: (_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.status,\n          data: (_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : _error$response1.data\n        });\n        throw error;\n      }\n    },\n    me: async () => {\n      try {\n        const response = await apiInstance.get('/api/auth/me');\n        console.log('Me response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response10, _error$response11;\n        console.error('Me API error:', {\n          message: error.message,\n          status: (_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.status,\n          data: (_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : _error$response11.data\n        });\n        throw error;\n      }\n    },\n    updateProfile: async userData => {\n      try {\n        const response = await apiInstance.put('/api/users/me', userData);\n        console.log('Update profile response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response12, _error$response13;\n        console.error('Update profile API error:', {\n          message: error.message,\n          status: (_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : _error$response12.status,\n          data: (_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : _error$response13.data\n        });\n        throw error;\n      }\n    },\n    changePassword: async data => {\n      try {\n        const response = await apiInstance.put('/api/auth/change-password', data);\n        console.log('Change password response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response14, _error$response15;\n        console.error('Change password API error:', {\n          message: error.message,\n          status: (_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : _error$response14.status,\n          data: (_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : _error$response15.data\n        });\n        throw error;\n      }\n    },\n    forgotPassword: async email => {\n      try {\n        const response = await apiInstance.post('/api/auth/forgot-password', {\n          email\n        });\n        console.log('Forgot password response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response16, _error$response17;\n        console.error('Forgot password API error:', {\n          message: error.message,\n          status: (_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : _error$response16.status,\n          data: (_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : _error$response17.data\n        });\n        throw error;\n      }\n    },\n    resetPassword: async (token, data) => {\n      try {\n        const response = await apiInstance.post(`/api/auth/reset-password/${token}`, data);\n        console.log('Reset password response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response18, _error$response19;\n        console.error('Reset password API error:', {\n          message: error.message,\n          status: (_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : _error$response18.status,\n          data: (_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : _error$response19.data\n        });\n        throw error;\n      }\n    }\n  },\n  // Users\n  users: {\n    getAll: async (params = {}) => {\n      try {\n        const response = await apiInstance.get('/api/users', {\n          params\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error getting users:', error);\n        throw error;\n      }\n    },\n    getById: async id => {\n      try {\n        const response = await apiInstance.get(`/api/users/${id}`);\n        return response.data;\n      } catch (error) {\n        console.error('Error getting user:', error);\n        throw error;\n      }\n    },\n    create: async userData => {\n      try {\n        const response = await apiInstance.post('/api/users', userData);\n        return response.data;\n      } catch (error) {\n        console.error('Error creating user:', error);\n        throw error;\n      }\n    },\n    update: async (id, userData) => {\n      try {\n        const response = await apiInstance.put(`/api/users/${id}`, userData);\n        return response.data;\n      } catch (error) {\n        console.error('Error updating user:', error);\n        throw error;\n      }\n    },\n    delete: async id => {\n      try {\n        const response = await apiInstance.delete(`/api/users/${id}`);\n        return response.data;\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        throw error;\n      }\n    },\n    updateStatus: async (id, isActive) => {\n      try {\n        const response = await apiInstance.patch(`/api/users/${id}/status`, {\n          isActive\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error updating user status:', error);\n        throw error;\n      }\n    }\n  },\n  // Properties\n  properties: {\n    getAll: async params => {\n      try {\n        const response = await apiInstance.get('/api/properties', {\n          params\n        });\n        console.log('Get all properties response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response20, _error$response21;\n        console.error('Get all properties API error:', {\n          message: error.message,\n          status: (_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : _error$response20.status,\n          data: (_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : _error$response21.data\n        });\n        throw error;\n      }\n    },\n    getById: async id => {\n      try {\n        const response = await apiInstance.get(`/api/properties/${id}`);\n        console.log('Get property by id response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response22, _error$response23;\n        console.error('Get property by id API error:', {\n          message: error.message,\n          status: (_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : _error$response22.status,\n          data: (_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : _error$response23.data\n        });\n        throw error;\n      }\n    },\n    create: async propertyData => {\n      try {\n        const formData = new FormData();\n\n        // Append all fields to form data\n        Object.entries(propertyData).forEach(([key, value]) => {\n          if (key === 'images' && Array.isArray(value)) {\n            // Handle multiple image files\n            value.forEach((file, index) => {\n              formData.append('images', file);\n            });\n          } else if (value !== null && value !== undefined) {\n            formData.append(key, value);\n          }\n        });\n        const response = await apiInstance.post('/api/properties', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Create property response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response24, _error$response25;\n        console.error('Create property API error:', {\n          message: error.message,\n          status: (_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : _error$response24.status,\n          data: (_error$response25 = error.response) === null || _error$response25 === void 0 ? void 0 : _error$response25.data\n        });\n        throw error;\n      }\n    },\n    update: async (id, propertyData) => {\n      try {\n        const formData = new FormData();\n\n        // Append all fields to form data\n        Object.entries(propertyData).forEach(([key, value]) => {\n          if (key === 'images' && Array.isArray(value)) {\n            // Handle multiple image files\n            value.forEach((file, index) => {\n              if (file instanceof File) {\n                formData.append('newImages', file);\n              } else {\n                // It's an existing image URL or ID\n                formData.append('existingImages', file);\n              }\n            });\n          } else if (value !== null && value !== undefined) {\n            formData.append(key, value);\n          }\n        });\n        const response = await apiInstance.put(`/api/properties/${id}`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Update property response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response26, _error$response27;\n        console.error('Update property API error:', {\n          message: error.message,\n          status: (_error$response26 = error.response) === null || _error$response26 === void 0 ? void 0 : _error$response26.status,\n          data: (_error$response27 = error.response) === null || _error$response27 === void 0 ? void 0 : _error$response27.data\n        });\n        throw error;\n      }\n    },\n    delete: async id => {\n      try {\n        const response = await apiInstance.delete(`/api/properties/${id}`);\n        console.log('Delete property response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response28, _error$response29;\n        console.error('Delete property API error:', {\n          message: error.message,\n          status: (_error$response28 = error.response) === null || _error$response28 === void 0 ? void 0 : _error$response28.status,\n          data: (_error$response29 = error.response) === null || _error$response29 === void 0 ? void 0 : _error$response29.data\n        });\n        throw error;\n      }\n    },\n    search: async params => {\n      try {\n        const response = await apiInstance.get('/api/properties/search', {\n          params\n        });\n        console.log('Search properties response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response30, _error$response31;\n        console.error('Search properties API error:', {\n          message: error.message,\n          status: (_error$response30 = error.response) === null || _error$response30 === void 0 ? void 0 : _error$response30.status,\n          data: (_error$response31 = error.response) === null || _error$response31 === void 0 ? void 0 : _error$response31.data\n        });\n        throw error;\n      }\n    },\n    getByUser: async userId => {\n      try {\n        const response = await apiInstance.get(`/api/properties/user/${userId}`);\n        console.log('Get properties by user response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response32, _error$response33;\n        console.error('Get properties by user API error:', {\n          message: error.message,\n          status: (_error$response32 = error.response) === null || _error$response32 === void 0 ? void 0 : _error$response32.status,\n          data: (_error$response33 = error.response) === null || _error$response33 === void 0 ? void 0 : _error$response33.data\n        });\n        throw error;\n      }\n    }\n  },\n  // Favorites\n  favorites: {\n    getAll: async () => {\n      try {\n        const response = await apiInstance.get('/favorites');\n        console.log('Get all favorites response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response34, _error$response35;\n        console.error('Get all favorites API error:', {\n          message: error.message,\n          status: (_error$response34 = error.response) === null || _error$response34 === void 0 ? void 0 : _error$response34.status,\n          data: (_error$response35 = error.response) === null || _error$response35 === void 0 ? void 0 : _error$response35.data\n        });\n        throw error;\n      }\n    },\n    add: async propertyId => {\n      try {\n        const response = await apiInstance.post('/favorites', {\n          propertyId\n        });\n        console.log('Add favorite response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response36, _error$response37;\n        console.error('Add favorite API error:', {\n          message: error.message,\n          status: (_error$response36 = error.response) === null || _error$response36 === void 0 ? void 0 : _error$response36.status,\n          data: (_error$response37 = error.response) === null || _error$response37 === void 0 ? void 0 : _error$response37.data\n        });\n        throw error;\n      }\n    },\n    remove: async propertyId => {\n      try {\n        const response = await apiInstance.delete(`/favorites/${propertyId}`);\n        console.log('Remove favorite response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response38, _error$response39;\n        console.error('Remove favorite API error:', {\n          message: error.message,\n          status: (_error$response38 = error.response) === null || _error$response38 === void 0 ? void 0 : _error$response38.status,\n          data: (_error$response39 = error.response) === null || _error$response39 === void 0 ? void 0 : _error$response39.data\n        });\n        throw error;\n      }\n    },\n    check: async propertyId => {\n      try {\n        const response = await apiInstance.get(`/favorites/check/${propertyId}`);\n        console.log('Check favorite response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response40, _error$response41;\n        console.error('Check favorite API error:', {\n          message: error.message,\n          status: (_error$response40 = error.response) === null || _error$response40 === void 0 ? void 0 : _error$response40.status,\n          data: (_error$response41 = error.response) === null || _error$response41 === void 0 ? void 0 : _error$response41.data\n        });\n        throw error;\n      }\n    }\n  },\n  // Messages\n  messages: {\n    getAll: async () => {\n      try {\n        const response = await apiInstance.get('/api/messages');\n        console.log('Get all messages response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response42, _error$response43;\n        console.error('Get all messages API error:', {\n          message: error.message,\n          status: (_error$response42 = error.response) === null || _error$response42 === void 0 ? void 0 : _error$response42.status,\n          data: (_error$response43 = error.response) === null || _error$response43 === void 0 ? void 0 : _error$response43.data\n        });\n        throw error;\n      }\n    },\n    getConversation: async userId => {\n      try {\n        const response = await apiInstance.get(`/api/messages/conversation/${userId}`);\n        console.log('Get conversation response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response44, _error$response45;\n        console.error('Get conversation API error:', {\n          message: error.message,\n          status: (_error$response44 = error.response) === null || _error$response44 === void 0 ? void 0 : _error$response44.status,\n          data: (_error$response45 = error.response) === null || _error$response45 === void 0 ? void 0 : _error$response45.data\n        });\n        throw error;\n      }\n    },\n    send: async data => {\n      try {\n        const response = await apiInstance.post('/api/messages', data);\n        console.log('Send message response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response46, _error$response47;\n        console.error('Send message API error:', {\n          message: error.message,\n          status: (_error$response46 = error.response) === null || _error$response46 === void 0 ? void 0 : _error$response46.status,\n          data: (_error$response47 = error.response) === null || _error$response47 === void 0 ? void 0 : _error$response47.data\n        });\n        throw error;\n      }\n    },\n    markAsRead: async messageId => {\n      try {\n        const response = await apiInstance.put(`/api/messages/${messageId}/read`);\n        console.log('Mark as read response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response48, _error$response49;\n        console.error('Mark as read API error:', {\n          message: error.message,\n          status: (_error$response48 = error.response) === null || _error$response48 === void 0 ? void 0 : _error$response48.status,\n          data: (_error$response49 = error.response) === null || _error$response49 === void 0 ? void 0 : _error$response49.data\n        });\n        throw error;\n      }\n    },\n    sendMessage: async messageData => {\n      try {\n        const response = await apiInstance.post('/api/messages', messageData);\n        console.log('Send message response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response50, _error$response51;\n        console.error('Send message API error:', {\n          message: error.message,\n          status: (_error$response50 = error.response) === null || _error$response50 === void 0 ? void 0 : _error$response50.status,\n          data: (_error$response51 = error.response) === null || _error$response51 === void 0 ? void 0 : _error$response51.data\n        });\n        throw error;\n      }\n    },\n    sendAdminReply: async messageData => {\n      try {\n        const response = await apiInstance.post('/api/messages/admin/reply', messageData);\n        console.log('Send admin reply response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response52, _error$response53;\n        console.error('Send admin reply API error:', {\n          message: error.message,\n          status: (_error$response52 = error.response) === null || _error$response52 === void 0 ? void 0 : _error$response52.status,\n          data: (_error$response53 = error.response) === null || _error$response53 === void 0 ? void 0 : _error$response53.data\n        });\n        throw error;\n      }\n    },\n    getMessages: async conversationId => {\n      try {\n        // If it's in conversation_* format, use the direct endpoint\n        if (conversationId.startsWith('conversation_')) {\n          const response = await apiInstance.get(`/api/messages/${conversationId}`);\n          console.log('Get messages response:', response.data);\n          return response;\n        }\n        // If it's a valid MongoDB ObjectId, use the conversation endpoint\n        if (/^[0-9a-fA-F]{24}$/.test(conversationId)) {\n          const response = await apiInstance.get(`/api/messages/conversation/${conversationId}`);\n          console.log('Get messages response:', response.data);\n          return response;\n        }\n        // Default to direct endpoint\n        const response = await apiInstance.get(`/api/messages/${conversationId}`);\n        console.log('Get messages response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response54, _error$response55;\n        console.error('Get messages API error:', {\n          message: error.message,\n          status: (_error$response54 = error.response) === null || _error$response54 === void 0 ? void 0 : _error$response54.status,\n          data: (_error$response55 = error.response) === null || _error$response55 === void 0 ? void 0 : _error$response55.data\n        });\n        throw error;\n      }\n    },\n    getConversations: async () => {\n      try {\n        const response = await apiInstance.get('/api/messages/conversations');\n        console.log('Get conversations response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response56, _error$response57;\n        console.error('Get conversations API error:', {\n          message: error.message,\n          status: (_error$response56 = error.response) === null || _error$response56 === void 0 ? void 0 : _error$response56.status,\n          data: (_error$response57 = error.response) === null || _error$response57 === void 0 ? void 0 : _error$response57.data\n        });\n        throw error;\n      }\n    }\n  },\n  // Interests\n  interests: {\n    getMine: async (filters = {}) => {\n      try {\n        const response = await apiInstance.get('/api/interests/me', {\n          params: filters,\n          headers: getAuthHeader()\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching interests:', error);\n        throw error;\n      }\n    },\n    submit: async formData => {\n      try {\n        const response = await apiInstance.post('/api/interests', formData, {\n          headers: {\n            ...getAuthHeader(),\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error submitting interest:', error);\n        throw error;\n      }\n    },\n    update: async (id, formData) => {\n      try {\n        const response = await apiInstance.put(`/api/interests/${id}`, formData, {\n          headers: {\n            ...getAuthHeader(),\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error updating interest:', error);\n        throw error;\n      }\n    },\n    delete: async id => {\n      try {\n        const response = await apiInstance.delete(`/api/interests/${id}`, {\n          headers: getAuthHeader()\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error deleting interest:', error);\n        throw error;\n      }\n    },\n    getAll: async (params = {}) => {\n      // Admin-only endpoint to list all interests\n      const response = await apiInstance.get('/api/interests/all', {\n        params,\n        headers: getAuthHeader()\n      });\n      return response.data;\n    },\n    getById: async id => {\n      const response = await apiInstance.get(`/api/interests/${id}`);\n      return response.data;\n    },\n    updateStatus: async (id, status, reason) => {\n      const body = reason ? {\n        status,\n        reason\n      } : {\n        status\n      };\n      const response = await apiInstance.patch(`/api/interests/${id}/status`, body);\n      return response.data;\n    }\n  },\n  // Uploads\n  uploads: {\n    uploadImage: async file => {\n      try {\n        const formData = new FormData();\n        formData.append('image', file);\n        const response = await apiInstance.post('/uploads/images', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('Upload image response:', response.data);\n        return response;\n      } catch (error) {\n        var _error$response58, _error$response59;\n        console.error('Upload image API error:', {\n          message: error.message,\n          status: (_error$response58 = error.response) === null || _error$response58 === void 0 ? void 0 : _error$response58.status,\n          data: (_error$response59 = error.response) === null || _error$response59 === void 0 ? void 0 : _error$response59.data\n        });\n        throw error;\n      }\n    }\n  },\n  // Upload\n  upload: {\n    uploadImages,\n    deleteImage\n  },\n  // User related API calls\n  user: {\n    // Upload identity document\n    uploadIdentityDocument: async formData => {\n      try {\n        const response = await apiInstance.post('/api/users/me/documents', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        return response.data;\n      } catch (error) {\n        var _error$response60, _error$response61;\n        console.error('Upload document error:', {\n          message: error.message,\n          status: (_error$response60 = error.response) === null || _error$response60 === void 0 ? void 0 : _error$response60.status,\n          data: (_error$response61 = error.response) === null || _error$response61 === void 0 ? void 0 : _error$response61.data\n        });\n        throw error;\n      }\n    }\n  },\n  // Admin analytics\n  adminAnalytics: {\n    getDashboard: async () => {\n      try {\n        const response = await apiInstance.get('/api/admin/analytics/dashboard', {\n          headers: getAuthHeader()\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching admin analytics dashboard:', error);\n        throw error;\n      }\n    },\n    getStatistics: async () => {\n      try {\n        const response = await apiInstance.get('/api/admin/analytics/statistics', {\n          headers: getAuthHeader()\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching admin analytics statistics:', error);\n        throw error;\n      }\n    }\n  }\n};\nexport default api;\nexport { apiInstance }; // Export the axios instance for custom requests","map":{"version":3,"names":["axios","toast","apiInstance","create","baseURL","process","env","REACT_APP_API_URL","headers","admin","getDashboard","response","get","getAuthHeader","data","getStatistics","params","timeout","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","FormData","error","Promise","reject","_error$response","_error$response2","_error$config","_error$config2","_error$config3","_error$response3","console","message","status","url","method","removeItem","window","location","href","uploadImages","formData","post","_error$response4","_error$response5","deleteImage","publicId","delete","_error$response6","_error$response7","api","auth","login","credentials","log","identifier","password","_error$response8","_error$response9","register","userData","email","_error$response0","_error$response1","me","_error$response10","_error$response11","updateProfile","put","_error$response12","_error$response13","changePassword","_error$response14","_error$response15","forgotPassword","_error$response16","_error$response17","resetPassword","_error$response18","_error$response19","users","getAll","getById","id","update","updateStatus","isActive","patch","properties","_error$response20","_error$response21","_error$response22","_error$response23","propertyData","Object","entries","forEach","key","value","Array","isArray","file","index","append","undefined","_error$response24","_error$response25","File","_error$response26","_error$response27","_error$response28","_error$response29","search","_error$response30","_error$response31","getByUser","userId","_error$response32","_error$response33","favorites","_error$response34","_error$response35","add","propertyId","_error$response36","_error$response37","remove","_error$response38","_error$response39","check","_error$response40","_error$response41","messages","_error$response42","_error$response43","getConversation","_error$response44","_error$response45","send","_error$response46","_error$response47","markAsRead","messageId","_error$response48","_error$response49","sendMessage","messageData","_error$response50","_error$response51","sendAdminReply","_error$response52","_error$response53","getMessages","conversationId","startsWith","test","_error$response54","_error$response55","getConversations","_error$response56","_error$response57","interests","getMine","filters","submit","reason","body","uploads","uploadImage","_error$response58","_error$response59","upload","user","uploadIdentityDocument","_error$response60","_error$response61","adminAnalytics"],"sources":["D:/project/react/project/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-hot-toast';\r\n\r\n// Create axios instance with base URL\r\nconst apiInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n\r\n  // Admin analytics\r\n  admin: {\r\n    getDashboard: async () => {\r\n      const response = await apiInstance.get('/api/admin/dashboard', { headers: getAuthHeader() });\r\n      return response.data;\r\n    },\r\n    getStatistics: async (params = {}) => {\r\n      const response = await apiInstance.get('/api/admin/statistics', { params, headers: getAuthHeader() });\r\n      return response.data;\r\n    },\r\n  },\r\n  timeout: 10000, // 10 seconds\r\n  withCredentials: true, // Important for CORS with credentials\r\n});\r\n\r\n// Request interceptor to add auth token\r\napiInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    // Ensure Content-Type is set correctly for FormData\r\n    if (config.data instanceof FormData) {\r\n      config.headers['Content-Type'] = 'multipart/form-data';\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napiInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      config: {\r\n        url: error.config?.url,\r\n        method: error.config?.method,\r\n        data: error.config?.data\r\n      }\r\n    });\r\n\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access (e.g., redirect to login)\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Upload images\r\nconst uploadImages = async (formData) => {\r\n  try {\r\n    const response = await apiInstance.post('/api/upload/images', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Upload images API error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      config: error.config\r\n    });\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete image\r\nconst deleteImage = async (publicId) => {\r\n  try {\r\n    const response = await apiInstance.delete(`/api/upload/images/${publicId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Delete image API error:', {\r\n      message: error.message,\r\n      status: error.response?.status,\r\n      data: error.response?.data\r\n    });\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get auth header\r\nconst getAuthHeader = () => {\r\n  const token = localStorage.getItem('token');\r\n  return token ? { Authorization: `Bearer ${token}` } : {};\r\n};\r\n\r\n// API methods\r\nconst api = {\r\n  // Auth\r\n  auth: {\r\n    login: async (credentials) => {\r\n      try {\r\n        console.log('Login attempt with:', { identifier: credentials.identifier });\r\n        const response = await apiInstance.post('/api/auth/login', {\r\n          identifier: credentials.identifier,\r\n          password: credentials.password\r\n        });\r\n        console.log('Login response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Login API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    register: async (userData) => {\r\n      try {\r\n        console.log('Registration attempt for:', userData.email);\r\n        const response = await apiInstance.post('/api/auth/register', userData);\r\n        console.log('Registration response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Registration API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    me: async () => {\r\n      try {\r\n        const response = await apiInstance.get('/api/auth/me');\r\n        console.log('Me response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Me API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    updateProfile: async (userData) => {\r\n      try {\r\n        const response = await apiInstance.put('/api/users/me', userData);\r\n        console.log('Update profile response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Update profile API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    changePassword: async (data) => {\r\n      try {\r\n        const response = await apiInstance.put('/api/auth/change-password', data);\r\n        console.log('Change password response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Change password API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    forgotPassword: async (email) => {\r\n      try {\r\n        const response = await apiInstance.post('/api/auth/forgot-password', { email });\r\n        console.log('Forgot password response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Forgot password API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    resetPassword: async (token, data) => {\r\n      try {\r\n        const response = await apiInstance.post(`/api/auth/reset-password/${token}`, data);\r\n        console.log('Reset password response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Reset password API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n  },\r\n  \r\n  // Users\r\n  users: {\r\n    getAll: async (params = {}) => {\r\n      try {\r\n        const response = await apiInstance.get('/api/users', { params });\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error getting users:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    getById: async (id) => {\r\n      try {\r\n        const response = await apiInstance.get(`/api/users/${id}`);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error getting user:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    create: async (userData) => {\r\n      try {\r\n        const response = await apiInstance.post('/api/users', userData);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error creating user:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    update: async (id, userData) => {\r\n      try {\r\n        const response = await apiInstance.put(`/api/users/${id}`, userData);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error updating user:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    delete: async (id) => {\r\n      try {\r\n        const response = await apiInstance.delete(`/api/users/${id}`);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error deleting user:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    updateStatus: async (id, isActive) => {\r\n      try {\r\n        const response = await apiInstance.patch(`/api/users/${id}/status`, { isActive });\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error updating user status:', error);\r\n        throw error;\r\n      }\r\n    }\r\n  },\r\n  \r\n  // Properties\r\n  properties: {\r\n    getAll: async (params) => {\r\n      try {\r\n        const response = await apiInstance.get('/api/properties', { params });\r\n        console.log('Get all properties response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Get all properties API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    getById: async (id) => {\r\n      try {\r\n        const response = await apiInstance.get(`/api/properties/${id}`);\r\n        console.log('Get property by id response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Get property by id API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    create: async (propertyData) => {\r\n      try {\r\n        const formData = new FormData();\r\n        \r\n        // Append all fields to form data\r\n        Object.entries(propertyData).forEach(([key, value]) => {\r\n          if (key === 'images' && Array.isArray(value)) {\r\n            // Handle multiple image files\r\n            value.forEach((file, index) => {\r\n              formData.append('images', file);\r\n            });\r\n          } else if (value !== null && value !== undefined) {\r\n            formData.append(key, value);\r\n          }\r\n        });\r\n        \r\n        const response = await apiInstance.post('/api/properties', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n        console.log('Create property response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Create property API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    update: async (id, propertyData) => {\r\n      try {\r\n        const formData = new FormData();\r\n        \r\n        // Append all fields to form data\r\n        Object.entries(propertyData).forEach(([key, value]) => {\r\n          if (key === 'images' && Array.isArray(value)) {\r\n            // Handle multiple image files\r\n            value.forEach((file, index) => {\r\n              if (file instanceof File) {\r\n                formData.append('newImages', file);\r\n              } else {\r\n                // It's an existing image URL or ID\r\n                formData.append('existingImages', file);\r\n              }\r\n            });\r\n          } else if (value !== null && value !== undefined) {\r\n            formData.append(key, value);\r\n          }\r\n        });\r\n        \r\n        const response = await apiInstance.put(`/api/properties/${id}`, formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n        console.log('Update property response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Update property API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    delete: async (id) => {\r\n      try {\r\n        const response = await apiInstance.delete(`/api/properties/${id}`);\r\n        console.log('Delete property response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Delete property API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    search: async (params) => {\r\n      try {\r\n        const response = await apiInstance.get('/api/properties/search', { params });\r\n        console.log('Search properties response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Search properties API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    getByUser: async (userId) => {\r\n      try {\r\n        const response = await apiInstance.get(`/api/properties/user/${userId}`);\r\n        console.log('Get properties by user response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Get properties by user API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n  },\r\n  \r\n  // Favorites\r\n  favorites: {\r\n    getAll: async () => {\r\n      try {\r\n        const response = await apiInstance.get('/favorites');\r\n        console.log('Get all favorites response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Get all favorites API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    add: async (propertyId) => {\r\n      try {\r\n        const response = await apiInstance.post('/favorites', { propertyId });\r\n        console.log('Add favorite response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Add favorite API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    remove: async (propertyId) => {\r\n      try {\r\n        const response = await apiInstance.delete(`/favorites/${propertyId}`);\r\n        console.log('Remove favorite response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Remove favorite API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    check: async (propertyId) => {\r\n      try {\r\n        const response = await apiInstance.get(`/favorites/check/${propertyId}`);\r\n        console.log('Check favorite response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Check favorite API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n  },\r\n  \r\n  // Messages\r\n  messages: {\r\n    getAll: async () => {\r\n      try {\r\n        const response = await apiInstance.get('/api/messages');\r\n        console.log('Get all messages response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Get all messages API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    getConversation: async (userId) => {\r\n      try {\r\n        const response = await apiInstance.get(`/api/messages/conversation/${userId}`);\r\n        console.log('Get conversation response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Get conversation API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    send: async (data) => {\r\n      try {\r\n        const response = await apiInstance.post('/api/messages', data);\r\n        console.log('Send message response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Send message API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\r\n      }\r\n    },\r\n    markAsRead: async (messageId) => {\r\n      try {\r\n        const response = await apiInstance.put(`/api/messages/${messageId}/read`);\r\n        console.log('Mark as read response:', response.data);\r\n        return response;\r\n      } catch (error) {\r\n        console.error('Mark as read API error:', {\r\n          message: error.message,\r\n          status: error.response?.status,\r\n          data: error.response?.data\r\n        });\r\n        throw error;\n      }\n    },\n    sendMessage: async (messageData) => {\n      try {\n        const response = await apiInstance.post('/api/messages', messageData);\n        console.log('Send message response:', response.data);\n        return response;\n      } catch (error) {\n        console.error('Send message API error:', {\n          message: error.message,\n          status: error.response?.status,\n          data: error.response?.data\n        });\n        throw error;\n      }\n    },\n    sendAdminReply: async (messageData) => {\n      try {\n        const response = await apiInstance.post('/api/messages/admin/reply', messageData);\n        console.log('Send admin reply response:', response.data);\n        return response;\n      } catch (error) {\n        console.error('Send admin reply API error:', {\n          message: error.message,\n          status: error.response?.status,\n          data: error.response?.data\n        });\n        throw error;\n      }\n    },\n    getMessages: async (conversationId) => {\n      try {\n        // If it's in conversation_* format, use the direct endpoint\n        if (conversationId.startsWith('conversation_')) {\n          const response = await apiInstance.get(`/api/messages/${conversationId}`);\n          console.log('Get messages response:', response.data);\n          return response;\n        }\n        // If it's a valid MongoDB ObjectId, use the conversation endpoint\n        if (/^[0-9a-fA-F]{24}$/.test(conversationId)) {\n          const response = await apiInstance.get(`/api/messages/conversation/${conversationId}`);\n          console.log('Get messages response:', response.data);\n          return response;\n        }\n        // Default to direct endpoint\n        const response = await apiInstance.get(`/api/messages/${conversationId}`);\n        console.log('Get messages response:', response.data);\n        return response;\n      } catch (error) {\n        console.error('Get messages API error:', {\n          message: error.message,\n          status: error.response?.status,\n          data: error.response?.data\n        });\n        throw error;\n      }\n    },\n    getConversations: async () => {\n      try {\n        const response = await apiInstance.get('/api/messages/conversations');\n        console.log('Get conversations response:', response.data);\n        return response;\n      } catch (error) {\n        console.error('Get conversations API error:', {\n          message: error.message,\n          status: error.response?.status,\n          data: error.response?.data\n        });\n        throw error;\n      }\n    },\n  },\n  \n  // Interests\n  interests: {\n    getMine: async (filters = {}) => {\n      try {\n        const response = await apiInstance.get('/api/interests/me', { \n          params: filters,\n          headers: getAuthHeader()\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching interests:', error);\n        throw error;\n      }\n    },\n    submit: async (formData) => {\n      try {\n        const response = await apiInstance.post('/api/interests', formData, {\n          headers: {\n            ...getAuthHeader(),\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error submitting interest:', error);\n        throw error;\n      }\n    },\n    update: async (id, formData) => {\n      try {\n        const response = await apiInstance.put(`/api/interests/${id}`, formData, {\n          headers: {\n            ...getAuthHeader(),\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error updating interest:', error);\n        throw error;\n      }\n    },\n    delete: async (id) => {\n      try {\n        const response = await apiInstance.delete(`/api/interests/${id}`, {\n          headers: getAuthHeader()\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error deleting interest:', error);\n        throw error;\n      }\n    },\n    getAll: async (params = {}) => {\n      // Admin-only endpoint to list all interests\n      const response = await apiInstance.get('/api/interests/all', {\n        params,\n        headers: getAuthHeader()\n      });\n      return response.data;\n    },\n    getById: async (id) => {\n      const response = await apiInstance.get(`/api/interests/${id}`);\n      return response.data;\n    },\n    updateStatus: async (id, status, reason) => {\n      const body = reason ? { status, reason } : { status };\n      const response = await apiInstance.patch(`/api/interests/${id}/status`, body);\n      return response.data;\n    },\n  },\n  \n  // Uploads\n  uploads: {\n    uploadImage: async (file) => {\n      try {\n        const formData = new FormData();\n        formData.append('image', file);\n        \n        const response = await apiInstance.post('/uploads/images', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n        console.log('Upload image response:', response.data);\n        return response;\n      } catch (error) {\n        console.error('Upload image API error:', {\n          message: error.message,\n          status: error.response?.status,\n          data: error.response?.data\n        });\n        throw error;\n      }\n    },\n  },\n  \n  // Upload\n  upload: {\n    uploadImages,\n    deleteImage,\n  },\n  \n  // User related API calls\n  user: {\n    // Upload identity document\n    uploadIdentityDocument: async (formData) => {\n      try {\n        const response = await apiInstance.post('/api/users/me/documents', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Upload document error:', {\n          message: error.message,\n          status: error.response?.status,\n          data: error.response?.data\n        });\n        throw error;\n      }\n    }\n  },\n  \n  // Admin analytics\n  adminAnalytics: {\n    getDashboard: async () => {\n      try {\n        const response = await apiInstance.get('/api/admin/analytics/dashboard', {\n          headers: getAuthHeader()\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching admin analytics dashboard:', error);\n        throw error;\n      }\n    },\n    getStatistics: async () => {\n      try {\n        const response = await apiInstance.get('/api/admin/analytics/statistics', {\n          headers: getAuthHeader()\n        });\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching admin analytics statistics:', error);\n        throw error;\n      }\n    },\n  },\n};\n\nexport default api;\n\nexport { apiInstance }; // Export the axios instance for custom requests\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}