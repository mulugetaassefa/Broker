{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react\\\\project\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport api, { apiInstance } from '../services/api';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          var _response$data;\n          // Set the auth token\n          apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Fetch user data\n          const response = await api.auth.me();\n          const userData = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.user) || response.data;\n\n          // Ensure user object has all required fields\n          if (userData) {\n            const normalizedUser = {\n              ...userData,\n              _id: userData._id || userData.id,\n              // Handle both _id and id fields\n              documents: userData.documents || [],\n              addresses: userData.addresses || []\n            };\n            setUser(normalizedUser);\n          }\n        }\n      } catch (err) {\n        console.error('Auth check failed:', err);\n        localStorage.removeItem('token');\n        delete apiInstance.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (identifier, password) => {\n    try {\n      setError(null);\n      console.log('Attempting login with:', {\n        identifier\n      });\n\n      // Call the login API with the correct format\n      const response = await api.auth.login({\n        identifier,\n        password\n      });\n      console.log('Raw login response:', response);\n\n      // Handle the server's response format\n      if (!response || !response.data) {\n        console.error('Invalid response format:', response);\n        throw new Error('Invalid server response');\n      }\n\n      // Extract token and user data from the response\n      const {\n        token,\n        user: userData\n      } = response.data;\n      if (!token || !userData) {\n        console.error('Missing token or user in response:', response.data);\n        throw new Error('Missing authentication data');\n      }\n\n      // Store the token in localStorage\n      localStorage.setItem('token', token);\n\n      // Set the default authorization header\n      apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Update the user state with the user data from the response\n      setUser(userData);\n\n      // Redirect based on user role\n      const redirectPath = userData.role === 'admin' ? '/dashboard/admin' : '/dashboard';\n      navigate(redirectPath, {\n        replace: true\n      });\n      toast.success('Logged in successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data;\n      console.error('Login error details:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n      });\n      let errorMessage = 'Login failed. Please try again.';\n      if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete apiInstance.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully!');\n    navigate('/login');\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await api.auth.register(userData);\n\n      // After successful registration, automatically log the user in\n      if (response.data && response.data.token) {\n        // Store the token\n        localStorage.setItem('token', response.data.token);\n        apiInstance.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\n\n        // Set the user data from the registration response\n        setUser(response.data.user);\n\n        // Redirect based on user role\n        const redirectPath = response.data.user.role === 'admin' ? '/dashboard/admin' : '/dashboard';\n        navigate(redirectPath, {\n          replace: true\n        });\n        toast.success('Registration successful! You are now logged in.');\n        return {\n          success: true,\n          data: response.data\n        };\n      }\n      return {\n        success: false,\n        error: 'Registration response missing token'\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const error = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Registration failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async profileData => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // Prepare the data to send\n      const dataToSend = {\n        ...profileData,\n        ...(profileData.address && {\n          region: profileData.address.region,\n          subCity: profileData.address.subCity,\n          specificLocation: profileData.address.specificLocation\n        })\n      };\n\n      // Remove undefined fields\n      Object.keys(dataToSend).forEach(key => {\n        if (dataToSend[key] === undefined || dataToSend[key] === '') {\n          delete dataToSend[key];\n        }\n      });\n      const response = await api.updateProfile(dataToSend);\n      setUser(prev => {\n        var _prev$address, _prev$address2, _prev$address3;\n        return {\n          ...prev,\n          ...response.user,\n          address: {\n            ...prev.address,\n            region: dataToSend.region || ((_prev$address = prev.address) === null || _prev$address === void 0 ? void 0 : _prev$address.region),\n            subCity: dataToSend.subCity || ((_prev$address2 = prev.address) === null || _prev$address2 === void 0 ? void 0 : _prev$address2.subCity),\n            specificLocation: dataToSend.specificLocation || ((_prev$address3 = prev.address) === null || _prev$address3 === void 0 ? void 0 : _prev$address3.specificLocation)\n          }\n        };\n      });\n      toast.success('Profile updated successfully!');\n      return {\n        success: true,\n        user: response.user\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const error = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Update failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.auth.changePassword({\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      const error = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Password change failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Forgot password\n  const forgotPassword = async email => {\n    try {\n      await api.auth.forgotPassword(email);\n      toast.success('Password reset link sent to your email');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      const error = ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Password reset request failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (token, password) => {\n    try {\n      await api.auth.resetPassword(token, {\n        password\n      });\n      toast.success('Password reset successful. Please login with your new password.');\n      navigate('/login');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      const error = ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Password reset failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Check if user is admin\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  const value = {\n    user,\n    loading,\n    error,\n    isAdmin,\n    login,\n    logout,\n    register,\n    updateProfile,\n    changePassword,\n    forgotPassword,\n    resetPassword,\n    setError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"Ir0O4uDvM0NuI5XjcKWqs1T5vIg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","useLocation","api","apiInstance","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","navigate","location","checkAuth","token","localStorage","getItem","_response$data","defaults","headers","common","response","auth","me","userData","data","normalizedUser","_id","id","documents","addresses","err","console","removeItem","login","identifier","password","log","Error","setItem","redirectPath","role","replace","success","_error$response","_error$response2","_error$response3","_error$response3$data","message","status","errorMessage","logout","register","_err$response","_err$response$data","updateProfile","profileData","dataToSend","address","region","subCity","specificLocation","Object","keys","forEach","key","undefined","prev","_prev$address","_prev$address2","_prev$address3","_err$response2","_err$response2$data","changePassword","currentPassword","newPassword","_err$response3","_err$response3$data","forgotPassword","email","_err$response4","_err$response4$data","resetPassword","_err$response5","_err$response5$data","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/project/react/project/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport api, { apiInstance } from '../services/api';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Check if user is logged in on initial load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          // Set the auth token\r\n          apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // Fetch user data\r\n          const response = await api.auth.me();\r\n          const userData = response.data?.user || response.data;\r\n          \r\n          // Ensure user object has all required fields\r\n          if (userData) {\r\n            const normalizedUser = {\r\n              ...userData,\r\n              _id: userData._id || userData.id, // Handle both _id and id fields\r\n              documents: userData.documents || [],\r\n              addresses: userData.addresses || []\r\n            };\r\n            setUser(normalizedUser);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Auth check failed:', err);\r\n        localStorage.removeItem('token');\r\n        delete apiInstance.defaults.headers.common['Authorization'];\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (identifier, password) => {\r\n    try {\r\n      setError(null);\r\n      console.log('Attempting login with:', { identifier });\r\n      \r\n      // Call the login API with the correct format\r\n      const response = await api.auth.login({ \r\n        identifier,\r\n        password \r\n      });\r\n      \r\n      console.log('Raw login response:', response);\r\n      \r\n      // Handle the server's response format\r\n      if (!response || !response.data) {\r\n        console.error('Invalid response format:', response);\r\n        throw new Error('Invalid server response');\r\n      }\r\n      \r\n      // Extract token and user data from the response\r\n      const { token, user: userData } = response.data;\r\n      \r\n      if (!token || !userData) {\r\n        console.error('Missing token or user in response:', response.data);\r\n        throw new Error('Missing authentication data');\r\n      }\r\n      \r\n      // Store the token in localStorage\r\n      localStorage.setItem('token', token);\r\n      \r\n      // Set the default authorization header\r\n      apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Update the user state with the user data from the response\r\n      setUser(userData);\r\n      \r\n      // Redirect based on user role\r\n      const redirectPath = userData.role === 'admin' ? '/dashboard/admin' : '/dashboard';\r\n      navigate(redirectPath, { replace: true });\r\n      \r\n      toast.success('Logged in successfully!');\r\n      return { success: true };\r\n      \r\n    } catch (error) {\r\n      console.error('Login error details:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status\r\n      });\r\n      \r\n      let errorMessage = 'Login failed. Please try again.';\r\n      \r\n      if (error.response?.data?.message) {\r\n        errorMessage = error.response.data.message;\r\n      } else if (error.message) {\r\n        errorMessage = error.message;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete apiInstance.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    toast.success('Logged out successfully!');\r\n    navigate('/login');\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.auth.register(userData);\r\n      \r\n      // After successful registration, automatically log the user in\r\n      if (response.data && response.data.token) {\r\n        // Store the token\r\n        localStorage.setItem('token', response.data.token);\r\n        apiInstance.defaults.headers.common['Authorization'] = `Bearer ${response.data.token}`;\r\n        \r\n        // Set the user data from the registration response\r\n        setUser(response.data.user);\r\n        \r\n        // Redirect based on user role\r\n        const redirectPath = response.data.user.role === 'admin' ? '/dashboard/admin' : '/dashboard';\r\n        navigate(redirectPath, { replace: true });\r\n        \r\n        toast.success('Registration successful! You are now logged in.');\r\n        return { success: true, data: response.data };\r\n      }\r\n      \r\n      return { success: false, error: 'Registration response missing token' };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || err.message || 'Registration failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      // Prepare the data to send\r\n      const dataToSend = {\r\n        ...profileData,\r\n        ...(profileData.address && {\r\n          region: profileData.address.region,\r\n          subCity: profileData.address.subCity,\r\n          specificLocation: profileData.address.specificLocation\r\n        })\r\n      };\r\n      \r\n      // Remove undefined fields\r\n      Object.keys(dataToSend).forEach(key => {\r\n        if (dataToSend[key] === undefined || dataToSend[key] === '') {\r\n          delete dataToSend[key];\r\n        }\r\n      });\r\n\r\n      const response = await api.updateProfile(dataToSend);\r\n      \r\n      setUser(prev => ({\r\n        ...prev,\r\n        ...response.user,\r\n        address: {\r\n          ...prev.address,\r\n          region: dataToSend.region || prev.address?.region,\r\n          subCity: dataToSend.subCity || prev.address?.subCity,\r\n          specificLocation: dataToSend.specificLocation || prev.address?.specificLocation\r\n        }\r\n      }));\r\n      \r\n      toast.success('Profile updated successfully!');\r\n      return { success: true, user: response.user };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Update failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await api.auth.changePassword({ currentPassword, newPassword });\r\n      toast.success('Password changed successfully!');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Password change failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Forgot password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await api.auth.forgotPassword(email);\r\n      toast.success('Password reset link sent to your email');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Password reset request failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      await api.auth.resetPassword(token, { password });\r\n      toast.success('Password reset successful. Please login with your new password.');\r\n      navigate('/login');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Password reset failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = user?.role === 'admin';\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    isAdmin,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n    changePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    setError\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}