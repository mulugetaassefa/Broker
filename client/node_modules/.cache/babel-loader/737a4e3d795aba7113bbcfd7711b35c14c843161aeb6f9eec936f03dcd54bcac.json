{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react\\\\project\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport api, { apiInstance } from '../services/api';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          var _response$data;\n          // Set the auth token\n          apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Fetch user data\n          const response = await api.auth.me();\n          const userData = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.user) || response.data;\n\n          // Ensure user object has _id field\n          if (userData) {\n            const normalizedUser = {\n              ...userData,\n              _id: userData._id || userData.id // Handle both _id and id fields\n            };\n            setUser(normalizedUser);\n          }\n        }\n      } catch (err) {\n        console.error('Auth check failed:', err);\n        localStorage.removeItem('token');\n        delete apiInstance.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = async (identifier, password) => {\n    try {\n      setError(null);\n      console.log('Attempting login with:', {\n        identifier\n      });\n\n      // Call the login API with the correct format\n      const response = await api.auth.login({\n        identifier,\n        password\n      });\n      console.log('Raw login response:', response);\n\n      // Handle the server's response format\n      if (!response || !response.data) {\n        console.error('Invalid response format:', response);\n        throw new Error('Invalid server response');\n      }\n      const {\n        token,\n        user: userData\n      } = response.data;\n      if (!token || !userData) {\n        console.error('Missing token or user in response:', response.data);\n        throw new Error('Missing authentication data');\n      }\n\n      // Store the token in localStorage\n      localStorage.setItem('token', token);\n\n      // Set the default authorization header\n      apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Update the user state\n      setUser(userData);\n\n      // Redirect based on user role\n      const redirectPath = userData.role === 'admin' ? '/dashboard/admin' : '/dashboard';\n      navigate(redirectPath, {\n        replace: true\n      });\n      toast.success('Logged in successfully!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response2, _err$response3, _err$config, _err$config2, _err$config3, _err$config4;\n      console.error('Login error details:', {\n        message: err.message,\n        response: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data,\n        status: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status,\n        headers: (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.headers,\n        config: {\n          url: (_err$config = err.config) === null || _err$config === void 0 ? void 0 : _err$config.url,\n          method: (_err$config2 = err.config) === null || _err$config2 === void 0 ? void 0 : _err$config2.method,\n          data: (_err$config3 = err.config) === null || _err$config3 === void 0 ? void 0 : _err$config3.data,\n          headers: (_err$config4 = err.config) === null || _err$config4 === void 0 ? void 0 : _err$config4.headers\n        }\n      });\n      let errorMessage = 'Login failed. Please try again.';\n      if (err.response) {\n        var _err$response$data, _err$response$data2, _err$response$data2$e, _err$response$data3;\n        errorMessage = ((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || ((_err$response$data2 = err.response.data) === null || _err$response$data2 === void 0 ? void 0 : (_err$response$data2$e = _err$response$data2.error) === null || _err$response$data2$e === void 0 ? void 0 : _err$response$data2$e.message) || ((_err$response$data3 = err.response.data) === null || _err$response$data3 === void 0 ? void 0 : _err$response$data3.error) || `Server error: ${err.response.status}`;\n      } else if (err.request) {\n        errorMessage = 'No response from server. Please check your connection.';\n      } else if (err.message) {\n        errorMessage = err.message;\n      }\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete apiInstance.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully!');\n    navigate('/login');\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await api.auth.register(userData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      const error = ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Registration failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Update profile\n  const updateProfile = async userData => {\n    try {\n      const response = await api.auth.updateProfile(userData);\n      setUser(response.data);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true,\n        user: response.data\n      };\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      const error = ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Update failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.auth.changePassword({\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      const error = ((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || 'Password change failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Forgot password\n  const forgotPassword = async email => {\n    try {\n      await api.auth.forgotPassword(email);\n      toast.success('Password reset link sent to your email');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response7, _err$response7$data;\n      const error = ((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || 'Password reset request failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (token, password) => {\n    try {\n      await api.auth.resetPassword(token, {\n        password\n      });\n      toast.success('Password reset successful. Please login with your new password.');\n      navigate('/login');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response8, _err$response8$data;\n      const error = ((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.message) || 'Password reset failed';\n      setError(error);\n      toast.error(error);\n      return {\n        success: false,\n        error\n      };\n    }\n  };\n\n  // Check if user is admin\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  const value = {\n    user,\n    loading,\n    error,\n    isAdmin,\n    login,\n    logout,\n    register,\n    updateProfile,\n    changePassword,\n    forgotPassword,\n    resetPassword,\n    setError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"Ir0O4uDvM0NuI5XjcKWqs1T5vIg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","useLocation","api","apiInstance","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","navigate","location","checkAuth","token","localStorage","getItem","_response$data","defaults","headers","common","response","auth","me","userData","data","normalizedUser","_id","id","err","console","removeItem","login","identifier","password","log","Error","setItem","redirectPath","role","replace","success","_err$response","_err$response2","_err$response3","_err$config","_err$config2","_err$config3","_err$config4","message","status","config","url","method","errorMessage","_err$response$data","_err$response$data2","_err$response$data2$e","_err$response$data3","request","logout","register","_err$response4","_err$response4$data","updateProfile","_err$response5","_err$response5$data","changePassword","currentPassword","newPassword","_err$response6","_err$response6$data","forgotPassword","email","_err$response7","_err$response7$data","resetPassword","_err$response8","_err$response8$data","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/project/react/project/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport api, { apiInstance } from '../services/api';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Check if user is logged in on initial load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          // Set the auth token\r\n          apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // Fetch user data\r\n          const response = await api.auth.me();\r\n          const userData = response.data?.user || response.data;\r\n          \r\n          // Ensure user object has _id field\r\n          if (userData) {\r\n            const normalizedUser = {\r\n              ...userData,\r\n              _id: userData._id || userData.id // Handle both _id and id fields\r\n            };\r\n            setUser(normalizedUser);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Auth check failed:', err);\r\n        localStorage.removeItem('token');\r\n        delete apiInstance.defaults.headers.common['Authorization'];\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (identifier, password) => {\r\n    try {\r\n      setError(null);\r\n      console.log('Attempting login with:', { identifier });\r\n      \r\n      // Call the login API with the correct format\r\n      const response = await api.auth.login({ \r\n        identifier,\r\n        password \r\n      });\r\n      \r\n      console.log('Raw login response:', response);\r\n      \r\n      // Handle the server's response format\r\n      if (!response || !response.data) {\r\n        console.error('Invalid response format:', response);\r\n        throw new Error('Invalid server response');\r\n      }\r\n      \r\n      const { token, user: userData } = response.data;\r\n      \r\n      if (!token || !userData) {\r\n        console.error('Missing token or user in response:', response.data);\r\n        throw new Error('Missing authentication data');\r\n      }\r\n      \r\n      // Store the token in localStorage\r\n      localStorage.setItem('token', token);\r\n      \r\n      // Set the default authorization header\r\n      apiInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Update the user state\r\n      setUser(userData);\r\n      \r\n      // Redirect based on user role\r\n      const redirectPath = userData.role === 'admin' ? '/dashboard/admin' : '/dashboard';\r\n      navigate(redirectPath, { replace: true });\r\n      \r\n      toast.success('Logged in successfully!');\r\n      return { success: true };\r\n    } catch (err) {\r\n      console.error('Login error details:', {\r\n        message: err.message,\r\n        response: err.response?.data,\r\n        status: err.response?.status,\r\n        headers: err.response?.headers,\r\n        config: {\r\n          url: err.config?.url,\r\n          method: err.config?.method,\r\n          data: err.config?.data,\r\n          headers: err.config?.headers\r\n        }\r\n      });\r\n      \r\n      let errorMessage = 'Login failed. Please try again.';\r\n      \r\n      if (err.response) {\r\n        errorMessage = err.response.data?.message || \r\n                     err.response.data?.error?.message ||\r\n                     err.response.data?.error ||\r\n                     `Server error: ${err.response.status}`;\r\n      } else if (err.request) {\r\n        errorMessage = 'No response from server. Please check your connection.';\r\n      } else if (err.message) {\r\n        errorMessage = err.message;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete apiInstance.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    toast.success('Logged out successfully!');\r\n    navigate('/login');\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      const response = await api.auth.register(userData);\r\n      return { success: true, data: response.data };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Registration failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Update profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const response = await api.auth.updateProfile(userData);\r\n      setUser(response.data);\r\n      toast.success('Profile updated successfully!');\r\n      return { success: true, user: response.data };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Update failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await api.auth.changePassword({ currentPassword, newPassword });\r\n      toast.success('Password changed successfully!');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Password change failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Forgot password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await api.auth.forgotPassword(email);\r\n      toast.success('Password reset link sent to your email');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Password reset request failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      await api.auth.resetPassword(token, { password });\r\n      toast.success('Password reset successful. Please login with your new password.');\r\n      navigate('/login');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const error = err.response?.data?.message || 'Password reset failed';\r\n      setError(error);\r\n      toast.error(error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = user?.role === 'admin';\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    isAdmin,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile,\r\n    changePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    setError\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}