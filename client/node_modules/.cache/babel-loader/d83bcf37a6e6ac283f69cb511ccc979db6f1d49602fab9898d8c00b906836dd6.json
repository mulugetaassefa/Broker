{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react\\\\project\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const {\n            data\n          } = await api.get('/auth/me');\n          setUser(data.user);\n        }\n      } catch (error) {\n        console.error('Failed to load user', error);\n        localStorage.removeItem('token');\n        delete api.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, []);\n\n  // Login function\n  const login = async (identifier, password) => {\n    // Changed 'email' to 'identifier'\n    try {\n      var _location$state, _location$state$from;\n      const {\n        data\n      } = await api.post('/auth/login', {\n        identifier,\n        password\n      }); // Sending 'identifier'\n      const {\n        token,\n        user\n      } = data;\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      toast.success('Logged in successfully!');\n\n      // Redirect to the intended page or dashboard\n      const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/dashboard';\n      navigate(from, {\n        replace: true\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.';\n      const errors = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.errors) || [];\n      toast.error(message);\n      throw {\n        message,\n        errors\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      const {\n        data\n      } = await api.post('/auth/register', userData);\n      const {\n        token,\n        user\n      } = data;\n      localStorage.setItem('token', token);\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      toast.success('Registration successful!');\n      navigate('/dashboard');\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed. Please try again.';\n      const errors = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.errors) || [];\n      toast.error(message);\n      throw {\n        message,\n        errors\n      }; // Throw the full error object\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully!');\n    navigate('/login');\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const {\n        data\n      } = await api.put('/auth/me', userData);\n      setUser(data.user);\n      toast.success('Profile updated successfully!');\n      return data.user;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to update profile';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await api.put('/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n      return true;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to change password';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Forgot password\n  const forgotPassword = async email => {\n    try {\n      await api.post('/auth/forgot-password', {\n        email\n      });\n      toast.success('Password reset link sent to your email');\n      return true;\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      const message = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to send reset email';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Reset password\n  const resetPassword = async (token, newPassword) => {\n    try {\n      await api.post(`/auth/reset-password/${token}`, {\n        newPassword\n      });\n      toast.success('Password reset successful. Please login with your new password.');\n      navigate('/login');\n      return true;\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      const message = ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to reset password';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    if (!user) return false;\n    return user.role === role;\n  };\n\n  // Check if user has any of the specified roles\n  const hasAnyRole = roles => {\n    if (!user) return false;\n    return roles.includes(user.role);\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin',\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    forgotPassword,\n    resetPassword,\n    hasRole,\n    hasAnyRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"VVuhODWcOIbpSDedBD8fuoocTYc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","useNavigate","useLocation","toast","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","location","loadUser","token","localStorage","getItem","defaults","headers","common","data","get","error","console","removeItem","login","identifier","password","_location$state","_location$state$from","post","setItem","success","from","state","pathname","replace","_error$response","_error$response$data","_error$response2","_error$response2$data","message","response","errors","register","userData","_error$response3","_error$response3$data","_error$response4","_error$response4$data","logout","updateProfile","put","_error$response5","_error$response5$data","changePassword","currentPassword","newPassword","_error$response6","_error$response6$data","forgotPassword","email","_error$response7","_error$response7$data","resetPassword","_error$response8","_error$response8$data","hasRole","role","hasAnyRole","roles","includes","value","isAuthenticated","isAdmin","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/project/react/project/client/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-hot-toast';\r\nimport { api } from '../services/api';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Check if user is logged in on initial load\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          const { data } = await api.get('/auth/me');\r\n          setUser(data.user);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load user', error);\r\n        localStorage.removeItem('token');\r\n        delete api.defaults.headers.common['Authorization'];\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (identifier, password) => { // Changed 'email' to 'identifier'\r\n    try {\r\n      const { data } = await api.post('/auth/login', { identifier, password }); // Sending 'identifier'\r\n      const { token, user } = data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(user);\r\n      toast.success('Logged in successfully!');\r\n      \r\n      // Redirect to the intended page or dashboard\r\n      const from = location.state?.from?.pathname || '/dashboard';\r\n      navigate(from, { replace: true });\r\n      \r\n      return { success: true, user };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed. Please try again.';\r\n      const errors = error.response?.data?.errors || [];\r\n      toast.error(message);\r\n      throw { message, errors };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      const { data } = await api.post('/auth/register', userData);\r\n      const { token, user } = data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(user);\r\n      toast.success('Registration successful!');\r\n      navigate('/dashboard');\r\n      \r\n      return { success: true, user };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed. Please try again.';\r\n      const errors = error.response?.data?.errors || [];\r\n      toast.error(message);\r\n      throw { message, errors }; // Throw the full error object\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    toast.success('Logged out successfully!');\r\n    navigate('/login');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const { data } = await api.put('/auth/me', userData);\r\n      setUser(data.user);\r\n      toast.success('Profile updated successfully!');\r\n      return data.user;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to update profile';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await api.put('/auth/change-password', { currentPassword, newPassword });\r\n      toast.success('Password changed successfully!');\r\n      return true;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to change password';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Forgot password\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await api.post('/auth/forgot-password', { email });\r\n      toast.success('Password reset link sent to your email');\r\n      return true;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to send reset email';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      await api.post(`/auth/reset-password/${token}`, { newPassword });\r\n      toast.success('Password reset successful. Please login with your new password.');\r\n      navigate('/login');\r\n      return true;\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to reset password';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Check if user has specific role\r\n  const hasRole = (role) => {\r\n    if (!user) return false;\r\n    return user.role === role;\r\n  };\r\n\r\n  // Check if user has any of the specified roles\r\n  const hasAnyRole = (roles) => {\r\n    if (!user) return false;\r\n    return roles.includes(user.role);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    forgotPassword,\r\n    resetPassword,\r\n    hasRole,\r\n    hasAnyRole,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}