{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react\\\\project\\\\client\\\\src\\\\pages\\\\dashboard\\\\Messages.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useSocket } from '../../contexts/SocketContext';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    socket,\n    joinConversation,\n    leaveConversation,\n    sendMessage\n  } = useSocket();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Fetch conversations on component mount\n  useEffect(() => {\n    const fetchConversations = async () => {\n      try {\n        setLoading(true);\n        const data = await api.messages.getConversations();\n        setConversations(data);\n        if (data.length > 0 && !selectedConversation) {\n          setSelectedConversation(data[0]);\n        }\n      } catch (err) {\n        setError('Failed to load conversations');\n        console.error('Error fetching conversations:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchConversations();\n  }, []);\n\n  // Fetch messages when selected conversation changes\n  useEffect(() => {\n    if (selectedConversation) {\n      const fetchMessages = async () => {\n        try {\n          setLoading(true);\n          const data = await api.messages.getMessages(selectedConversation._id);\n          setMessages(data);\n        } catch (err) {\n          setError('Failed to load messages');\n          console.error('Error fetching messages:', err);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchMessages();\n    }\n  }, [selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation._id]);\n\n  // Handle new messages from WebSocket\n  useEffect(() => {\n    if (!socket) return;\n    const handleNewMessage = newMessage => {\n      setMessages(prev => [...prev, newMessage]);\n      // If the message is for the current user and not from them, mark as read\n      if (newMessage.receiver === user.id && newMessage.sender._id !== user.id) {\n        markAsRead(newMessage._id);\n      }\n      scrollToBottom();\n    };\n    socket.on('new_message', handleNewMessage);\n    return () => {\n      socket.off('new_message', handleNewMessage);\n    };\n  }, [socket, user.id]);\n\n  // Join conversation room when selected\n  useEffect(() => {\n    if (selectedConversation !== null && selectedConversation !== void 0 && selectedConversation._id && socket) {\n      joinConversation(selectedConversation._id);\n\n      // Mark messages as read when conversation is selected\n      const markMessagesAsRead = async () => {\n        const unreadMessages = messages.filter(msg => !msg.isRead && msg.receiver === user.id);\n        if (unreadMessages.length > 0) {\n          try {\n            await Promise.all(unreadMessages.map(msg => markAsRead(msg._id)));\n            // Refresh messages to update read status\n            const {\n              data\n            } = await api.messages.getMessages(selectedConversation._id);\n            setMessages(data);\n          } catch (error) {\n            console.error('Error marking messages as read:', error);\n          }\n        }\n      };\n      markMessagesAsRead();\n      return () => {\n        leaveConversation(selectedConversation._id);\n      };\n    }\n  }, [selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation._id, socket, joinConversation, leaveConversation]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!message.trim() || !selectedConversation) return;\n    try {\n      const newMessage = {\n        content: message,\n        conversationId: selectedConversation._id,\n        receiver: selectedConversation.participant._id\n      };\n\n      // Send message via WebSocket\n      await sendMessage(newMessage);\n\n      // Optimistic UI update\n      const optimisticMessage = {\n        ...newMessage,\n        _id: Date.now().toString(),\n        sender: {\n          _id: user.id,\n          firstName: user.firstName,\n          lastName: user.lastName\n        },\n        createdAt: new Date().toISOString(),\n        isRead: false\n      };\n      setMessages(prev => [...prev, optimisticMessage]);\n      setMessage('');\n      scrollToBottom();\n\n      // Refresh conversations to update last message\n      const {\n        data\n      } = await api.messages.getConversations();\n      setConversations(data);\n    } catch (err) {\n      console.error('Error sending message:', err);\n      setError('Failed to send message');\n    }\n  };\n  const markAsRead = async messageId => {\n    try {\n      await api.messages.markAsRead(messageId);\n    } catch (error) {\n      console.error('Error marking message as read:', error);\n    }\n  };\n  if (loading && !selectedConversation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading conversations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r border-gray-200 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-y-auto h-[calc(100vh-64px)]\",\n        children: conversations.map(conv => {\n          var _conv$lastMessage;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-4 border-b border-gray-100 cursor-pointer hover:bg-gray-50 ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation._id) === conv._id ? 'bg-blue-50' : ''}`,\n            onClick: () => setSelectedConversation(conv),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-medium\",\n                children: [conv.participant.firstName, \" \", conv.participant.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), conv.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-blue-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\",\n                children: conv.unreadCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 truncate\",\n              children: ((_conv$lastMessage = conv.lastMessage) === null || _conv$lastMessage === void 0 ? void 0 : _conv$lastMessage.content) || 'No messages yet'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, conv._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col\",\n      children: selectedConversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b border-gray-200 bg-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: [selectedConversation.participant.firstName, ' ', selectedConversation.participant.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: selectedConversation.participant.isAdmin ? 'Admin' : 'User'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n          children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center text-gray-500 mt-8\",\n            children: \"No messages yet. Start the conversation!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this) : messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${msg.sender._id === user.id ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${msg.sender._id === user.id ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-800'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs opacity-75 mt-1\",\n                children: new Date(msg.createdAt).toLocaleTimeString([], {\n                  hour: '2-digit',\n                  minute: '2-digit'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 21\n            }, this)\n          }, msg._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t border-gray-200 bg-white\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              placeholder: \"Type your message...\",\n              className: \"flex-1 border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Select a conversation to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"sW7UZzwYwK0nzcnt6GrNlik72mc=\", false, function () {\n  return [useAuth, useSocket];\n});\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","useSocket","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","_s","user","socket","joinConversation","leaveConversation","sendMessage","message","setMessage","messages","setMessages","conversations","setConversations","selectedConversation","setSelectedConversation","loading","setLoading","error","setError","messagesEndRef","fetchConversations","data","getConversations","length","err","console","fetchMessages","getMessages","_id","handleNewMessage","newMessage","prev","receiver","id","sender","markAsRead","scrollToBottom","on","off","markMessagesAsRead","unreadMessages","filter","msg","isRead","Promise","all","map","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","content","conversationId","participant","optimisticMessage","Date","now","toString","firstName","lastName","createdAt","toISOString","messageId","children","fileName","_jsxFileName","lineNumber","columnNumber","className","conv","_conv$lastMessage","onClick","unreadCount","lastMessage","isAdmin","toLocaleTimeString","hour","minute","ref","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["D:/project/react/project/client/src/pages/dashboard/Messages.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useSocket } from '../../contexts/SocketContext';\r\nimport api from '../../services/api';\r\n\r\nconst Messages = () => {\r\n  const { user } = useAuth();\r\n  const { socket, joinConversation, leaveConversation, sendMessage } = useSocket();\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  // Fetch conversations on component mount\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await api.messages.getConversations();\r\n        setConversations(data);\r\n        if (data.length > 0 && !selectedConversation) {\r\n          setSelectedConversation(data[0]);\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to load conversations');\r\n        console.error('Error fetching conversations:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchConversations();\r\n  }, []);\r\n\r\n  // Fetch messages when selected conversation changes\r\n  useEffect(() => {\r\n    if (selectedConversation) {\r\n      const fetchMessages = async () => {\r\n        try {\r\n          setLoading(true);\r\n          const data = await api.messages.getMessages(selectedConversation._id);\r\n          setMessages(data);\r\n        } catch (err) {\r\n          setError('Failed to load messages');\r\n          console.error('Error fetching messages:', err);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchMessages();\r\n    }\r\n  }, [selectedConversation?._id]);\r\n\r\n  // Handle new messages from WebSocket\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const handleNewMessage = (newMessage) => {\r\n      setMessages(prev => [...prev, newMessage]);\r\n      // If the message is for the current user and not from them, mark as read\r\n      if (newMessage.receiver === user.id && newMessage.sender._id !== user.id) {\r\n        markAsRead(newMessage._id);\r\n      }\r\n      scrollToBottom();\r\n    };\r\n\r\n    socket.on('new_message', handleNewMessage);\r\n\r\n    return () => {\r\n      socket.off('new_message', handleNewMessage);\r\n    };\r\n  }, [socket, user.id]);\r\n\r\n  // Join conversation room when selected\r\n  useEffect(() => {\r\n    if (selectedConversation?._id && socket) {\r\n      joinConversation(selectedConversation._id);\r\n      \r\n      // Mark messages as read when conversation is selected\r\n      const markMessagesAsRead = async () => {\r\n        const unreadMessages = messages.filter(\r\n          msg => !msg.isRead && msg.receiver === user.id\r\n        );\r\n        \r\n        if (unreadMessages.length > 0) {\r\n          try {\r\n            await Promise.all(\r\n              unreadMessages.map(msg => markAsRead(msg._id))\r\n            );\r\n            // Refresh messages to update read status\r\n            const { data } = await api.messages.getMessages(selectedConversation._id);\r\n            setMessages(data);\r\n          } catch (error) {\r\n            console.error('Error marking messages as read:', error);\r\n          }\r\n        }\r\n      };\r\n      \r\n      markMessagesAsRead();\r\n      \r\n      return () => {\r\n        leaveConversation(selectedConversation._id);\r\n      };\r\n    }\r\n  }, [selectedConversation?._id, socket, joinConversation, leaveConversation]);\r\n\r\n  // Auto-scroll to bottom when messages change\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!message.trim() || !selectedConversation) return;\r\n\r\n    try {\r\n      const newMessage = {\r\n        content: message,\r\n        conversationId: selectedConversation._id,\r\n        receiver: selectedConversation.participant._id\r\n      };\r\n\r\n      // Send message via WebSocket\r\n      await sendMessage(newMessage);\r\n      \r\n      // Optimistic UI update\r\n      const optimisticMessage = {\r\n        ...newMessage,\r\n        _id: Date.now().toString(),\r\n        sender: { _id: user.id, firstName: user.firstName, lastName: user.lastName },\r\n        createdAt: new Date().toISOString(),\r\n        isRead: false\r\n      };\r\n      \r\n      setMessages(prev => [...prev, optimisticMessage]);\r\n      setMessage('');\r\n      scrollToBottom();\r\n      \r\n      // Refresh conversations to update last message\r\n      const { data } = await api.messages.getConversations();\r\n      setConversations(data);\r\n      \r\n    } catch (err) {\r\n      console.error('Error sending message:', err);\r\n      setError('Failed to send message');\r\n    }\r\n  };\r\n\r\n  const markAsRead = async (messageId) => {\r\n    try {\r\n      await api.messages.markAsRead(messageId);\r\n    } catch (error) {\r\n      console.error('Error marking message as read:', error);\r\n    }\r\n  };\r\n\r\n  if (loading && !selectedConversation) {\r\n    return <div>Loading conversations...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex h-screen bg-gray-100\">\r\n      {/* Sidebar with conversations */}\r\n      <div className=\"w-1/4 border-r border-gray-200 bg-white\">\r\n        <div className=\"p-4 border-b border-gray-200\">\r\n          <h2 className=\"text-xl font-semibold\">Messages</h2>\r\n        </div>\r\n        <div className=\"overflow-y-auto h-[calc(100vh-64px)]\">\r\n          {conversations.map((conv) => (\r\n            <div\r\n              key={conv._id}\r\n              className={`p-4 border-b border-gray-100 cursor-pointer hover:bg-gray-50 ${\r\n                selectedConversation?._id === conv._id ? 'bg-blue-50' : ''\r\n              }`}\r\n              onClick={() => setSelectedConversation(conv)}\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"font-medium\">\r\n                  {conv.participant.firstName} {conv.participant.lastName}\r\n                </h3>\r\n                {conv.unreadCount > 0 && (\r\n                  <span className=\"bg-blue-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\r\n                    {conv.unreadCount}\r\n                  </span>\r\n                )}\r\n              </div>\r\n              <p className=\"text-sm text-gray-500 truncate\">\r\n                {conv.lastMessage?.content || 'No messages yet'}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat area */}\r\n      <div className=\"flex-1 flex flex-col\">\r\n        {selectedConversation ? (\r\n          <>\r\n            {/* Chat header */}\r\n            <div className=\"p-4 border-b border-gray-200 bg-white\">\r\n              <h2 className=\"text-lg font-semibold\">\r\n                {selectedConversation.participant.firstName}{' '}\r\n                {selectedConversation.participant.lastName}\r\n              </h2>\r\n              <p className=\"text-sm text-gray-500\">\r\n                {selectedConversation.participant.isAdmin ? 'Admin' : 'User'}\r\n              </p>\r\n            </div>\r\n\r\n            {/* Messages */}\r\n            <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\r\n              {messages.length === 0 ? (\r\n                <div className=\"text-center text-gray-500 mt-8\">\r\n                  No messages yet. Start the conversation!\r\n                </div>\r\n              ) : (\r\n                messages.map((msg) => (\r\n                  <div\r\n                    key={msg._id}\r\n                    className={`flex ${\r\n                      msg.sender._id === user.id ? 'justify-end' : 'justify-start'\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\r\n                        msg.sender._id === user.id\r\n                          ? 'bg-blue-500 text-white'\r\n                          : 'bg-gray-200 text-gray-800'\r\n                      }`}\r\n                    >\r\n                      <p>{msg.content}</p>\r\n                      <p className=\"text-xs opacity-75 mt-1\">\r\n                        {new Date(msg.createdAt).toLocaleTimeString([], {\r\n                          hour: '2-digit',\r\n                          minute: '2-digit',\r\n                        })}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              )}\r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            {/* Message input */}\r\n            <div className=\"p-4 border-t border-gray-200 bg-white\">\r\n              <form onSubmit={handleSendMessage} className=\"flex space-x-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  placeholder=\"Type your message...\"\r\n                  className=\"flex-1 border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  Send\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <p className=\"text-gray-500\">Select a conversation to start chatting</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}